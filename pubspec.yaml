name: dzikbusters
description: A new Flutter project.

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.2.2 <3.0.0"

dependencies:
  flutter:
    sdk: flutter
  provider: ^3.0.0+1
  path_provider: ^1.1.0
  path: ^1.6.2
  sqflite: ^1.1.5
  location: ^2.3.5
  google_maps_flutter: ^0.5.17
  flutter_map: ^0.10.1+1
  latlong: ^0.6.1
  http: ^0.12.0+2
  geolocator: ^5.1.3

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^0.1.2
  cloud_firestore:
  firebase_core: '^0.5.0'
  firebase_auth:
  image_picker: ^0.6.5+3
  firebase_storage:

dev_dependencies:
  flutter_test:
    sdk: flutter

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #  - images/a_dot_burr.jpeg
  #  - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages


#  <manifest xmlns:android="http://schemas.android.com/apk/res/android"
#  package="com.example.flutter_app">
#  <!-- io.flutter.app.FlutterApplication is an android.app.Application that
#  calls FlutterMain.startInitialization(this); in its onCreate method.
#  In most cases you can leave this as-is, but you if you want to provide
#  additional functionality it is fine to subclass or reimplement
#  FlutterApplication and put your custom class here. -->
#  <uses-permission android:name="android.permission.INTERNET" />
#  <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
#  <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
#  <application
#  android:name="io.flutter.app.FlutterApplication"
#  android:label="flutter_app"
#  android:icon="@mipmap/ic_launcher">
#  <meta-data android:name="com.google.android.geo.API_KEY"
#  android:value="AIzaSyBfOIOLyq8vrHkV32qu6-b5RbTJm1Atg7I" />
#  <activity
#  android:name=".MainActivity"
#  android:launchMode="singleTop"
#  android:theme="@style/LaunchTheme"
#  android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
#  android:hardwareAccelerated="true"
#  android:windowSoftInputMode="adjustResize">
#  <!-- Specifies an Android theme to apply to this Activity as soon as
#  the Android process has started. This theme is visible to the user
#  while the Flutter UI initializes. After that, this theme continues
#  to determine the Window background behind the Flutter UI. -->
#  <meta-data
#  android:name="io.flutter.embedding.android.NormalTheme"
#  android:resource="@style/NormalTheme"
#  />
#  <!-- Displays an Android View that continues showing the launch screen
#  Drawable until Flutter paints its first frame, then this splash
#  screen fades out. A splash screen is useful to avoid any visual
#  gap between the end of Android's launch screen and the painting of
#  Flutter's first frame. -->
#  <meta-data
#  android:name="io.flutter.embedding.android.SplashScreenDrawable"
#  android:resource="@drawable/launch_background"
#  />
#  <intent-filter>
#  <action android:name="android.intent.action.MAIN"/>
#  <category android:name="android.intent.category.LAUNCHER"/>
#  </intent-filter>
#  </activity>
#  <!-- Don't delete the meta-data below.
#  This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
#  <meta-data
#  android:name="flutterEmbedding"
#  android:value="2" />
#  </application>
#  </manifest>
#
#
#  org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -Djava.net.preferIPv4Stack=true
#  android.useAndroidX=true
#  android.enableJetifier=true
#  android.enableR8=true
